name: CD

on:
  workflow_dispatch:
    inputs:
      is_prerelease:
        description: "Whether this is a pre-release (yes/no)"
        required: false
        default: "no"
      skips_version_bump:
        description: "Whether to skip automatic version bump (yes/no)"
        required: false
        default: "no"
      skips_version_commit:
        description: "Whether to skip the version commit (yes/no)"
        required: false
        default: "no"
      skips_publish:
        description: "Whether to skip publishing the release assets (yes/no)"
        required: false
        default: "no"

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-release_assets:
    name: Publish the release assets
    runs-on: ubuntu-latest
    needs: [build-distrod_wsl_launcher, bump-version]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump-version.outputs.tag }}

      - name: Get the arch name
        run: |
          echo "ARCH_NAME=$(uname -m)" >> $GITHUB_ENV

      - name: Download opt_distrod
        uses: actions/download-artifact@v4
        with:
          name: "opt_distrod-${{ env.ARCH_NAME }}"
          path: assets

      - name: Download distrod_wsl_launcher
        uses: actions/download-artifact@v4
        with:
          name: "distrod_wsl_launcher-${{ env.ARCH_NAME }}"
          path: "distrod_wsl_launcher-${{ env.ARCH_NAME }}"

      - name: Zip distrod_wsl_launcher
        run: |
          sudo apt update
          sudo apt install -y zip
          zip -r "distrod_wsl_launcher-${{ env.ARCH_NAME }}.zip" "distrod_wsl_launcher-${{ env.ARCH_NAME }}"
          mv "distrod_wsl_launcher-${{ env.ARCH_NAME }}.zip" assets/

      - name: Upload Binaries to Release
        uses: svenstaro/upload-release-action@v2
        if: github.event.inputs.skips_publish != 'yes'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: assets/*
          file_glob: true
          tag: ${{ needs.bump-version.outputs.tag }}
          overwrite: true
          prerelease: ${{ github.event.inputs.is_prerelease == 'yes' }}
          release_name: ${{ needs.bump-version.outputs.tag }}
          body: ${{ needs.bump-version.outputs.clean_changelog }}

  build-distrod_wsl_launcher:
    name: Build Distrod WSL launcher
    runs-on: windows-latest
    needs: [build-distrod-command, bump-version]

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump-version.outputs.tag }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            distrod/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Get the arch name
        shell: bash
        run: |
          echo "ARCH_NAME=$(uname -m)" >> $GITHUB_ENV

      - name: Download the Distrod's rootfs
        uses: actions/download-artifact@v4
        with:
          name: "distrod_root-${{ env.ARCH_NAME }}"
          path: rootfs

      - name: Build
        run: make -f windows.mk ROOTFS_PATH=rootfs/distrod_root.tar.gz distrod_wsl_launcher

      - name: Upload for the assets
        uses: actions/upload-artifact@v4
        with:
          name: "distrod_wsl_launcher-${{ env.ARCH_NAME }}"
          path: distrod/target/release/distrod_wsl_launcher.exe
          if-no-files-found: error

  build-distrod-command:
    name: Build distrod Linux command
    runs-on: ubuntu-latest

    needs: [build-portproxy-exe, bump-version]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump-version.outputs.tag }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            distrod/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Get the arch name
        shell: bash
        run: |
          echo "ARCH_NAME=$(uname -m)" >> $GITHUB_ENV

      - name: Download portproxy.exe
        uses: actions/download-artifact@v2
        with:
          name: "portproxy-${{ env.ARCH_NAME }}"
          path: distrod/target/release

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install -y patchelf
          sudo apt-get install -y apt-file; sudo apt-file update
          cargo install --git https://github.com/EmbarkStudios/cargo-about.git --rev b4d194a734215f55a88191236cd5112ddb198920

      - name: Build the Distrod command
        run: make distrod-release

      - name: Build the Distrod rootfs
        run: make OUTPUT_ROOTFS_PATH=distrod_root.tar.gz rootfs

      - name: Upload opt_distrod.tar.gz for the assets
        uses: actions/upload-artifact@v2
        with:
          name: "opt_distrod-${{ env.ARCH_NAME }}"
          path: opt_distrod.tar.gz
          if-no-files-found: error

      - name: Upload distrod_root.tar.gz for the Windows build
        uses: actions/upload-artifact@v2
        with:
          name: "distrod_root-${{ env.ARCH_NAME }}"
          path: distrod_root.tar.gz
          if-no-files-found: error

  bump-version:
    name: Bump the version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}

    steps:
      - uses: actions/checkout@v2
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          version-file: ./distrod/distrod/Cargo.toml,./distrod/distrod-exec/Cargo.toml,./distrod/distrod_wsl_launcher/Cargo.toml
          version-path: package.version
          skip-on-empty: false
          git-user-name: "github-actions[bot]"
          git-user-email: "41898282+github-actions[bot]@users.noreply.github.com"
          release-count: "0"
          skip-version-file: ${{ github.event.inputs.skips_version_bump == 'yes' }}
          skip-commit: ${{ github.event.inputs.skips_version_commit == 'yes' }}
          skip-ci: false

  build-portproxy-exe:
    name: Build portproxy.exe
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            distrod/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Get the arch name
        shell: bash
        run: |
          echo "ARCH_NAME=$(uname -m)" >> $GITHUB_ENV

      - name: Build
        run: make -f windows.mk portproxy.exe

      - name: Upload portproxy.exe for the Linux build
        uses: actions/upload-artifact@v2
        with:
          name: "portproxy-${{ env.ARCH_NAME }}"
          path: distrod/target/release/portproxy.exe
          if-no-files-found: error
